<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="variaveis_8c" kind="file" language="C++">
    <compoundname>variaveis.c</compoundname>
    <includes refid="stack3_8h" local="yes">stack3.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>variaveis.c</label>
        <link refid="variaveis_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>stack3.h</label>
        <link refid="stack3_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stack3_8h_1a4e41b34fb87c918e012cde5b33af31bf" kindref="member">DATA</ref></type>
        <definition>DATA transformaLONG</definition>
        <argsstring>(long x)</argsstring>
        <name>transformaLONG</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>funçao que converte para LONG o topo da stack <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de um elemento como parametro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>retorna o elemento ja convertido </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="variaveis.c" line="12" column="6" bodyfile="variaveis.c" bodystart="12" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="variaveis_8c_1a948014d1a960f24b606610b1d2d31246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stack3_8h_1a4e41b34fb87c918e012cde5b33af31bf" kindref="member">DATA</ref></type>
        <definition>DATA transformaDOUBLE</definition>
        <argsstring>(double x)</argsstring>
        <name>transformaDOUBLE</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>funçao que converte para DOUBLE o topo da stack <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de um elemento como parametro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>retorna o elemento ja convertido </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="variaveis.c" line="23" column="6" bodyfile="variaveis.c" bodystart="23" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="variaveis_8c_1a768af51fbdf9a79f8f037baabf5baeb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stack3_8h_1a4e41b34fb87c918e012cde5b33af31bf" kindref="member">DATA</ref></type>
        <definition>DATA transformaCHAR</definition>
        <argsstring>(char x)</argsstring>
        <name>transformaCHAR</name>
        <param>
          <type>char</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>funçao que converte para CHAR o topo da stack <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de um elemento como parametro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>retorna o elemento ja convertido </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="variaveis.c" line="34" column="6" bodyfile="variaveis.c" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="variaveis_8c_1a262fd2995fb913ac19aaed4466449def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void new_stack</definition>
        <argsstring>(STACK *s)</argsstring>
        <name>new_stack</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>funçao que vai a certa posição do array e exibe o valor por omissão </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem da stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="variaveis.c" line="44" column="6" bodyfile="variaveis.c" bodystart="44" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="variaveis_8c_1a1f9a744b20e31dfad2f9310a22bd151d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void letras</definition>
        <argsstring>(STACK *s, char letra)</argsstring>
        <name>letras</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>letra</declname>
        </param>
        <briefdescription>
<para>funçao que coloca no topo da stack o conteúdo da variável que é passado como parametro </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem da stack como parametro </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>letra</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem da variavel como elemento </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="variaveis.c" line="62" column="6" bodyfile="variaveis.c" bodystart="62" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="variaveis_8c_1aa97ae06406264a97b678671578465b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void doisPontosLetra</definition>
        <argsstring>(STACK *s, char letra)</argsstring>
        <name>doisPontosLetra</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char</type>
          <declname>letra</declname>
        </param>
        <briefdescription>
<para>funçao que copia o que está no topo da stack para a variável </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem da stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>letra</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem da variavel como parametro </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="variaveis.c" line="81" column="6" bodyfile="variaveis.c" bodystart="81" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stack3_8h" kindref="compound">stack3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="structdata" kindref="compound">DATA</ref><sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>x){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/>y.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="structdata" kindref="compound">DATA</ref><sp/><ref refid="variaveis_8c_1a948014d1a960f24b606610b1d2d31246" kindref="member">transformaDOUBLE</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/>y.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="structdata" kindref="compound">DATA</ref><sp/><ref refid="variaveis_8c_1a768af51fbdf9a79f8f037baabf5baeb3" kindref="member">transformaCHAR</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>x){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>y.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="variaveis_8c_1a262fd2995fb913ac19aaed4466449def" kindref="member">new_stack</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[0]<sp/>=<sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(10);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[1]<sp/>=<sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(11);<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[2]<sp/>=<sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(12);<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[3]<sp/>=<sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(13);<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[4]<sp/>=<sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(14);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[5]<sp/>=<sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(15);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[13]<sp/>=<sp/><ref refid="variaveis_8c_1a768af51fbdf9a79f8f037baabf5baeb3" kindref="member">transformaCHAR</ref>(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[18]<sp/>=<sp/><ref refid="variaveis_8c_1a768af51fbdf9a79f8f037baabf5baeb3" kindref="member">transformaCHAR</ref>(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[23]<sp/>=<sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(0);<sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[24]<sp/>=<sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(1);<sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[25]<sp/>=<sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(2);<sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="variaveis_8c_1a1f9a744b20e31dfad2f9310a22bd151d" kindref="member">letras</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>letra){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>letra;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y<sp/>=<sp/>s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[pos-65];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>push_LONG(s,y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>push_DOUBLE(s,y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>push_CHAR(s,y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aee847e634a4297b274316de8a8ca9921" kindref="member">STRING</ref>))<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>push_STRING(s,y.<ref refid="structdata_1a3beeb46678aaab2565d0a2669c03ea1f" kindref="member">STRING</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="comment">//<sp/>copia<sp/>o<sp/>topo<sp/>da<sp/>stack<sp/>para<sp/>a<sp/>variavel<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="variaveis_8c_1aa97ae06406264a97b678671578465b36" kindref="member">doisPontosLetra</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>letra)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>z<sp/>=<sp/><ref refid="stack3_8c_1a1c8a0d720a37d9d2a5844e6013c915c2" kindref="member">top</ref>(s);<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>letra;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>DATA<sp/>y<sp/>=<sp/>(s-&gt;array[x-65]);<sp/><sp/><sp/><sp/>//<sp/>vai<sp/>a<sp/>tal<sp/>posiçao<sp/>do<sp/>array<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(z,<ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[x-65])<sp/>=<sp/><ref refid="variaveis_8c_1a2386fe98afde4232f9c44ed3cac92613" kindref="member">transformaLONG</ref>(z.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(z,<ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[x-65])<sp/>=<sp/><ref refid="variaveis_8c_1a948014d1a960f24b606610b1d2d31246" kindref="member">transformaDOUBLE</ref>(z.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(z,<ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(s-&gt;<ref refid="structstack_1a26b350ee847ba536e67bed2f8317ace0" kindref="member">array</ref>[x-65])<sp/>=<sp/><ref refid="variaveis_8c_1a768af51fbdf9a79f8f037baabf5baeb3" kindref="member">transformaCHAR</ref>(z.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="variaveis.c"/>
  </compounddef>
</doxygen>
