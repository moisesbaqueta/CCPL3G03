<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="logic_8c" kind="file" language="C++">
    <compoundname>logic.c</compoundname>
    <includes refid="stack3_8h" local="yes">stack3.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>stack3.h</label>
        <link refid="stack3_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>logic.c</label>
        <link refid="logic_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="logic_8c_1ab420fb61501cb4a7a3c765d2cd00bcb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EMAIOR</definition>
        <argsstring>(STACK *s)</argsstring>
        <name>EMAIOR</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>funçao que coloca no topo da stack o maior entre os dois elementos do topo da stack <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logic.c" line="11" column="6" bodyfile="logic.c" bodystart="11" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="logic_8c_1a454bffa5d04a6394bd11d4ec40057bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EMENOR</definition>
        <argsstring>(STACK *s)</argsstring>
        <name>EMENOR</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>funçao que coloca no topo da stack o menor entre os dois elementos do topo da stack <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logic.c" line="55" column="6" bodyfile="logic.c" bodystart="55" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="logic_8c_1acedf6b27be4168e4e90597914dce6969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BIGGER</definition>
        <argsstring>(STACK *s)</argsstring>
        <name>BIGGER</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>funçao que coloca no topo da stack 1 (verdadeiro) se o topo for inferior ao penultimo elemento e 0 (falso) se for superior </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logic.c" line="99" column="6" bodyfile="logic.c" bodystart="99" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="logic_8c_1a992311a356550e46528bc1d03eb23485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SMALLER</definition>
        <argsstring>(STACK *s)</argsstring>
        <name>SMALLER</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>funçao que coloca no topo da stack 0 (falso) se o topo for inferior ao penultimo elemento e 1 (verdadeiro) se for superior </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logic.c" line="157" column="6" bodyfile="logic.c" bodystart="157" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="logic_8c_1a5b449276dd008f02ea08a2cd6ba6f58e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EQUAL</definition>
        <argsstring>(STACK *s)</argsstring>
        <name>EQUAL</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>funçao que coloca no topo da stack 1 (verdadeiro) se o topo e o penultimo forem iguais e 0 (falso) se forem diferentes </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logic.c" line="214" column="6" bodyfile="logic.c" bodystart="214" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="logic_8c_1ae60b3ad1e403dc5348a4549f5b45fce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NAO</definition>
        <argsstring>(STACK *s)</argsstring>
        <name>NAO</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>funçao que coloca no topo da stack 1 (verdadeiro) se o topo for zero e 0 se o topo da stack for qualquer elemento exceto o zero <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logic.c" line="271" column="6" bodyfile="logic.c" bodystart="271" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="logic_8c_1a39e3579f52e7acc7556dd85dccb254b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eShortcout</definition>
        <argsstring>(STACK *s)</argsstring>
        <name>eShortcout</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>funçao que coloca no topo da stack 0 se um dos dois ultimos elementos é zero, caso contrario retorna o topo da stack </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logic.c" line="306" column="6" bodyfile="logic.c" bodystart="306" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="logic_8c_1acdb6eda92820c2cd303a492c8376c1e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ouShortcout</definition>
        <argsstring>(STACK *s)</argsstring>
        <name>ouShortcout</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>funçao que coloca no topo da stack 0 se os dois ultimos elementos da stack forem zero , caso contrario retorna o penultimo elemento </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logic.c" line="396" column="6" bodyfile="logic.c" bodystart="396" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="logic_8c_1ae729ece2114ad9a6ad90d575ca4c51df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ifThenElse</definition>
        <argsstring>(STACK *s)</argsstring>
        <name>ifThenElse</name>
        <param>
          <type><ref refid="stack3_8h_1ade8bb1f37e07eb511f3873082665d739" kindref="member">STACK</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>se o topo da stack for verdadeiro, ou seja, qualquer elemento exceto o zero, a funçao coloca no topo da stack o penultimo elemento, caso contrario coloca o antepenultimo </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- passagem de stack como parametro <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logic.c" line="487" column="6" bodyfile="logic.c" bodystart="487" bodyend="510"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stack3_8h" kindref="compound">stack3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logic_8c_1ab420fb61501cb4a7a3c765d2cd00bcb5" kindref="member">EMAIOR</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>x<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&gt;=<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/>}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&gt;=<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&gt;=<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&gt;=<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&gt;=<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&gt;=<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&gt;=<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&gt;=<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&gt;=<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logic_8c_1a454bffa5d04a6394bd11d4ec40057bfb" kindref="member">EMENOR</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>x<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&lt;=<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&lt;=<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&lt;=<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&lt;=<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&lt;=<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&lt;=<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&lt;=<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&lt;=<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&lt;=<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logic_8c_1acedf6b27be4168e4e90597914dce6969" kindref="member">BIGGER</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>x<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>r;<sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&gt;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&gt;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&gt;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&gt;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&gt;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&gt;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&gt;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&gt;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&gt;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logic_8c_1a992311a356550e46528bc1d03eb23485" kindref="member">SMALLER</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>x<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>r;<sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&lt;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&lt;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&lt;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&lt;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&lt;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>&lt;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&lt;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>&lt;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>&lt;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logic_8c_1a5b449276dd008f02ea08a2cd6ba6f58e" kindref="member">EQUAL</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>x<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>r;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>){</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>){</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>){</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);<sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logic_8c_1ae60b3ad1e403dc5348a4549f5b45fce7" kindref="member">NAO</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>x<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>r;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aee847e634a4297b274316de8a8ca9921" kindref="member">STRING</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a3beeb46678aaab2565d0a2669c03ea1f" kindref="member">STRING</ref><sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logic_8c_1a39e3579f52e7acc7556dd85dccb254b9" kindref="member">eShortcout</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>x<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>r;<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0<sp/>||<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0<sp/>||<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>==<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;<sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0<sp/>||<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>;<sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>=<sp/>x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);<sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0.0<sp/>nao<sp/>funciona<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0<sp/>||<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>;<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>=<sp/>x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0<sp/>||<sp/>x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>;<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>=<sp/>x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0<sp/>||<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0<sp/>||<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>;<sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>=<sp/>x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0<sp/>||<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>;<sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>=<sp/>x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0<sp/>||<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0)<sp/>{<sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a876bb066356bbdd8dbadc449e4caf33c" kindref="member">type</ref><sp/>=<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>;<sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>=<sp/>x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="comment">//<sp/>escolhe<sp/>o<sp/>que<sp/>está<sp/>em<sp/>ultimo<sp/><sp/>FUNCIONA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logic_8c_1acdb6eda92820c2cd303a492c8376c1e3" kindref="member">ouShortcout</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>x<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>r;<sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(x,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>)<sp/>&amp;&amp;<sp/><ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(y,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,r);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>==0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logic_8c_1ae729ece2114ad9a6ad90d575ca4c51df" kindref="member">ifThenElse</ref>(<ref refid="structstack" kindref="compound">STACK</ref><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>x<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>y<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata" kindref="compound">DATA</ref><sp/>z<sp/>=<sp/><ref refid="stack3_8c_1a28bdc96407c992586646198197537cd1" kindref="member">pop</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(z,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7aaee055c4a5aba7d55774e4f1c01dacea" kindref="member">LONG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(z.<ref refid="structdata_1af3e6e49ca276f2a351f97bad4738368e" kindref="member">LONG</ref><sp/>!=0)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(z,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a33465d1d419b1074fb259ef444609e92" kindref="member">DOUBLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(z.<ref refid="structdata_1aecc3f36c8ad5b0d05fee3f3372aee7d8" kindref="member">DOUBLE</ref><sp/>!=0)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="stack3_8c_1aae9dbe2826c50633f609d0a71b5fbcd3" kindref="member">has_type</ref>(z,<sp/><ref refid="stack3_8h_1a0bc6723d5d4776ab7cdc646728b775f7a4618cf21306b3c647741afa7ebefcab8" kindref="member">CHAR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(z.<ref refid="structdata_1a26ec264014a6fcbcdbc5e69936e59724" kindref="member">CHAR</ref><sp/>!=0)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,y);<sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stack3_8c_1a1e86b7a7ef501bffae1ec8c82a0220eb" kindref="member">push</ref>(s,x);<sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="logic.c"/>
  </compounddef>
</doxygen>
